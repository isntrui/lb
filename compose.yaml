services:
  postgres:
    image: 'postgres:latest'
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${DBUSER}
      POSTGRES_PASSWORD: ${DBPASS}
      POSTGRES_DB: lbdb
    volumes:
      - pg_data:/var/lib/postgresql/data  # Persist data in this volume
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 1GB
    networks:
      - monitoring
    labels:
      - "prometheus-job=postgres"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DBUSER}"]
      interval: 30s
      timeout: 10s
      retries: 5
  loki:
    image: grafana/loki:2.9.0
    ports:
      - "3100:3100"
    command: -config.file=local-config.yaml
    networks:
      - monitoring
    volumes:
      - /loki/index:/loki/index
      - /loki/chunks:/loki/chunks
      - /loki/boltdb-cache:/loki/boltdb-cache
    user: "root"
  postgres_exporter:
    image: 'prometheuscommunity/postgres-exporter:latest'
    ports:
      - '9187:9187'
    environment:
      DATA_SOURCE_URI: postgres:5432/lbdb?sslmode=disable
      DATA_SOURCE_USER: ${DBUSER}
      DATA_SOURCE_PASS: ${DBPASS}

    networks:
      - monitoring
    depends_on:
      - postgres
    labels:
      - "prometheus-job=postgres-exporter"
  grafana:
    image: grafana/grafana:latest
    ports:
      - '3000:3000'
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - monitoring
    depends_on:
      - prometheus
    labels:
      - "prometheus-job=grafana"
    user: "root"

  prometheus:
    image: prom/prometheus:latest
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus:/prometheus
    networks:
      - monitoring
    user: "root"
    labels:
      - "prometheus-job=prometheus"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

  app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_USERNAME: ${DBUSER}
      SPRING_DATASOURCE_PASSWORD: ${DBPASS}
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/lbdb
      DOCKER_HOST: unix:///var/run/docker.sock
      SIGNING_KEY: ${SIGNING_KEY}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    ports:
      - '80:80'
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 1GB
    networks:
      - monitoring
    labels:
      - "prometheus-job=spring-boot-app"
volumes:
  pg_data:
  grafana_data:

networks:
  monitoring:

